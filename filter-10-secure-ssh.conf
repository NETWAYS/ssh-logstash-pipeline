filter {
  if [message] =~ /^(Accepted|Failed)/ {
    grok {
      match => ["message", "%{DATA:[ssh][auth][event]} %{DATA:[ssh][auth][method]} for (invalid user )?%{DATA:[ssh][user]} from %{IPORHOST:[ssh][source][ip]} port %{NUMBER:[ssh][source][port]} ssh2(: %{GREEDYDATA:[ssh][signature]})?"]
      id => "ssh_login"
      tag_on_failure => ["_grokparsefaillure","ssh_login_grok_failed"]
    }
  }
  if [message] =~ /^Invalid/ {
    grok {
      match => ["message","%{DATA:[ssh][auth][event]} user %{USERNAME:[ssh][user]} from %{IPORHOST:[ssh][source][ip]}"]
      id => "ssh_login_suspection"
      tag_on_failure => ["_grokparsefaillure","ssh_login_suspection_grok_failed"]
    }
  }
  if [message] =~ /pam_unix/ {
    grok {
      match => ["message","pam_unix\(%{DATA:[session][type]}\:session\)\: session %{DATA:[ssh][session][status]} for user %{USERNAME:[ssh][user]}( by (.*)?\(uid\=%{NUMBER:[uid]}\))?"]
      id => "pam_unix_session"
      tag_on_failure => ["_grokparsefaillure","pam_unix_session_grok_failed"]
    }
  }
}